AWSTemplateFormatVersion: '2010-09-09'
Description: Creates AWS Glue resources.  **WARNING**  You will be billed for the
  AWS resources used if you create a stack from this template.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Environment Configuration
        Parameters:
          - EnvironmentType
    ParameterLabels:
      EnvironmentType:
        default: environment type
#      DataBaseName-2:
#        Type: String
Parameters:
  EnvironmentType:
    Description: Enter the CloudCheckr 3rd party External ID
    Type: String
    Default: ''

Resources:
  DatasetsDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: clientdatabasename
        Description: Creating New DataBase to Create Table were Quary Data Stores
        LocationUri: TestLocationUri
        Parameters:
          key1 : "value1"
#          key2 : "value2"
  CrawlerTable:
    # Creating the table waits for the database to be created
    DependsOn: DatasetsDatabase
    Type: AWS::Glue::Table
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseName: !Ref DatasetsDatabase
      TableInput:
        Name: clienttenanttable
        Description: Define the first few columns of the flights table
        TableType: EXTERNAL_TABLE
        Parameters: {
    "classification": "csv"
  }

  HLSBucketName:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: clientuploaddatabucketsfile
      AccessControl: BucketOwnerFullControl

  DeveloperBucketName:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dxcgluejobscriptlocation
      AccessControl: BucketOwnerFullControl

  DestinationBucketName:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: processed-data-for-clients
      AccessControl: BucketOwnerFullControl


  AWSGlueCrawlerRoleName:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "glue.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        -
          PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "*"
                Resource: "*"

  Crawlercatlog:
    Type: AWS::Glue::Crawler
    Properties:
      Name: GlueCrawler
      Role: !Ref AWSGlueCrawlerRoleName
      DatabaseName: !Ref DatasetsDatabase
      Targets:
        S3Targets:
          - Path: !Ref HLSBucketName
      SchemaChangePolicy:
        UpdateBehavior: UPDATE_IN_DATABASE
        DeleteBehavior: "LOG"
      Schedule:
       ScheduleExpression: cron(0/5 * ? * MON-FRI *)
#        ScheduleExpression: "cron(0 10 * * ? *)"
#  CuratedDatasetsJob:
#    Type: AWS::Glue::Job
#    Properties:
#      Command:
#        Name: glueetl
#        ScriptLocation: !Sub 's3://${QSS3BucketName}/${QSS3KeyPrefix}assets/glue/curated-datasets-job.py'
#      MaxRetries: 0
#      DefaultArguments:
#        --datalake_submissions_database_name: !Ref 'DatalakeSubmissionsDatabase'
##        --datalake_curated_datasets_bucket_name: !Ref 'CuratedBucketName'
#        --job-bookmark-option: job-bookmark-disable
#      Role: !Ref 'AWSGlueJobRoleName'
#@Outputs:
#  CuratedDatasetsDatabaseName:
#    Value: !Ref 'CuratedDatasetsDatabase'
#  CuratedDatasetsCrawlerName:
#    Value: !Ref 'CuratedDatasetsCrawler'
#  CuratedDatasetsJobName:
#    Value: !Ref 'CuratedDatasetsJob'
